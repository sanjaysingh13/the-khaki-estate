# Generated by Django 5.2.6 on 2025-09-17 10:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("backend", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="maintenancerequest",
            options={
                "ordering": ["-priority", "-created_at"],
                "verbose_name": "Maintenance Request",
                "verbose_name_plural": "Maintenance Requests",
            },
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="acknowledged_at",
            field=models.DateTimeField(
                blank=True,
                help_text="When the request was first acknowledged by staff",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="actual_completion",
            field=models.DateTimeField(
                blank=True, help_text="Actual completion date/time", null=True
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="actual_cost",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Actual cost incurred for the maintenance work",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="assigned_at",
            field=models.DateTimeField(
                blank=True,
                help_text="When the request was assigned to a staff member",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="assigned_by",
            field=models.ForeignKey(
                blank=True,
                help_text="Staff member who assigned this request",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_maintenance_by",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="closed_at",
            field=models.DateTimeField(
                blank=True,
                help_text="When the request was officially closed",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="estimated_completion",
            field=models.DateTimeField(
                blank=True, help_text="Estimated completion date/time", null=True
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="estimated_cost",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Estimated cost for the maintenance work",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="resident_feedback",
            field=models.TextField(
                blank=True, help_text="Resident feedback on the completed work"
            ),
        ),
        migrations.AddField(
            model_name="maintenancerequest",
            name="resident_rating",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (1, "1 Star"),
                    (2, "2 Stars"),
                    (3, "3 Stars"),
                    (4, "4 Stars"),
                    (5, "5 Stars"),
                ],
                help_text="Resident rating (1-5 stars)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="maintenancerequest",
            name="assigned_to",
            field=models.ForeignKey(
                blank=True,
                help_text="Staff member assigned to handle this request",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_maintenance_requests",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="maintenancerequest",
            name="location",
            field=models.CharField(
                help_text="e.g., 'Flat A-101', 'Common Area - Lobby'", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="maintenancerequest",
            name="resident",
            field=models.ForeignKey(
                help_text="Resident who submitted the request",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="maintenance_requests",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="maintenancerequest",
            name="resolved_at",
            field=models.DateTimeField(
                blank=True,
                help_text="When the request was marked as resolved",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="maintenancerequest",
            name="status",
            field=models.CharField(
                choices=[
                    ("submitted", "Submitted"),
                    ("acknowledged", "Acknowledged"),
                    ("assigned", "Assigned"),
                    ("in_progress", "In Progress"),
                    ("resolved", "Resolved"),
                    ("closed", "Closed"),
                    ("cancelled", "Cancelled"),
                ],
                default="submitted",
                max_length=15,
            ),
        ),
        migrations.AlterField(
            model_name="resident",
            name="emergency_contact_phone",
            field=models.CharField(blank=True, max_length=13),
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "employee_id",
                    models.CharField(
                        help_text="Unique employee identifier",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "staff_role",
                    models.CharField(
                        choices=[
                            ("facility_manager", "Facility Manager"),
                            ("accountant", "Accountant"),
                            ("security_head", "Security Head"),
                            ("maintenance_supervisor", "Maintenance Supervisor"),
                            ("electrician", "Electrician"),
                            ("plumber", "Plumber"),
                            ("cleaner", "Cleaner"),
                            ("gardener", "Gardener"),
                        ],
                        help_text="Role/designation of the staff member",
                        max_length=25,
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, help_text="Department or team", max_length=50
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(help_text="Primary contact number", max_length=13),
                ),
                (
                    "alternate_phone",
                    models.CharField(
                        blank=True, help_text="Alternate contact number", max_length=13
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=13),
                ),
                (
                    "employment_status",
                    models.CharField(
                        choices=[
                            ("full_time", "Full Time"),
                            ("part_time", "Part Time"),
                            ("contract", "Contract"),
                            ("consultant", "Consultant"),
                        ],
                        default="full_time",
                        max_length=15,
                    ),
                ),
                ("hire_date", models.DateField(help_text="Date of joining")),
                (
                    "can_access_all_maintenance",
                    models.BooleanField(
                        default=False,
                        help_text="Can view and manage all maintenance requests",
                    ),
                ),
                (
                    "can_assign_requests",
                    models.BooleanField(
                        default=False,
                        help_text="Can assign maintenance requests to other staff",
                    ),
                ),
                (
                    "can_close_requests",
                    models.BooleanField(
                        default=False,
                        help_text="Can mark maintenance requests as resolved/closed",
                    ),
                ),
                (
                    "can_manage_finances",
                    models.BooleanField(
                        default=False,
                        help_text="Can access financial reports and billing",
                    ),
                ),
                (
                    "can_send_announcements",
                    models.BooleanField(
                        default=False,
                        help_text="Can create and send announcements to residents",
                    ),
                ),
                (
                    "work_schedule",
                    models.TextField(
                        blank=True,
                        help_text="Work schedule description (e.g., Mon-Fri 9AM-6PM)",
                    ),
                ),
                (
                    "is_available_24x7",
                    models.BooleanField(
                        default=False, help_text="Available for emergency calls 24/7"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Is currently employed and active"
                    ),
                ),
                (
                    "last_activity",
                    models.DateTimeField(
                        blank=True, help_text="Last system activity", null=True
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("urgent_only", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "reporting_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="Direct supervisor/manager",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subordinates",
                        to="backend.staff",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="staff",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Staff Member",
                "verbose_name_plural": "Staff Members",
                "ordering": ["staff_role", "user__name"],
            },
        ),
    ]
